# ===============================================
# Promtail Configuration
# Log collection agent for Loki
# ===============================================

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    tenant_id: prismy

scrape_configs:
  # Docker container logs
  - job_name: containers
    static_configs:
      - targets:
          - localhost
        labels:
          job: containers
          __path__: /var/lib/docker/containers/*/*log
    
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs:
      - json:
          expressions:
            tag:
          source: attrs
      - regex:
          expression: (?P<container_name>(?:[^|]*\|){1})(?P<image_name>(?:[^|]*\|){1})(?P<image_id>(?:[^|]*\|){1})(?P<container_id>(?:[^|]*))
          source: tag
      - labels:
          stream:
          container_name:
          image_name:
          image_id:
          container_id:
      - timestamp:
          format: RFC3339Nano
          source: time
      - output:
          source: output

  # Application logs
  - job_name: prismy-app
    static_configs:
      - targets:
          - localhost
        labels:
          job: prismy-app
          __path__: /var/log/prismy/*.log
    
    pipeline_stages:
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z)\s+(?P<level>\w+)\s+(?P<message>.*)'
      - labels:
          level:
      - timestamp:
          format: RFC3339
          source: timestamp
      - metrics:
          log_lines_total:
            type: Counter
            description: "Total number of log lines"
            source: level
            config:
              action: inc
          log_bytes_total:
            type: Counter
            description: "Total bytes of log lines"
            source: message
            config:
              action: add
              match_all: true
              count_entry_bytes: true

  # Nginx access logs
  - job_name: nginx
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          __path__: /var/log/nginx/access.log
    
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>\S+) - (?P<remote_user>\S+) \[(?P<timestamp>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>\S+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]*)" "(?P<http_user_agent>[^"]*)"'
      - labels:
          method:
          status:
      - timestamp:
          format: "02/Jan/2006:15:04:05 -0700"
          source: timestamp
      - metrics:
          http_nginx_response_time:
            type: Histogram
            description: "Response time in seconds"
            source: response_time
            config:
              buckets: [0.001, 0.01, 0.1, 0.5, 1.0, 5.0, 10.0]

  # System logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          __path__: /var/log/syslog
    
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w+\s+\d+\s+\d{2}:\d{2}:\d{2})\s+(?P<hostname>\S+)\s+(?P<service>\S+?)(?:\[(?P<pid>\d+)\])?: (?P<message>.*)'
      - labels:
          hostname:
          service:
      - timestamp:
          format: "Jan 2 15:04:05"
          source: timestamp

  # PostgreSQL logs
  - job_name: postgres
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgres
          __path__: /var/log/postgresql/*.log
    
    pipeline_stages:
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} \w+) \[(?P<pid>\d+)\] (?P<level>\w+):  (?P<message>.*)'
      - labels:
          level:
      - timestamp:
          format: "2006-01-02 15:04:05.000 MST"
          source: timestamp
      - metrics:
          postgres_errors_total:
            type: Counter
            description: "Total number of PostgreSQL errors"
            source: level
            config:
              action: inc
              match_all: false
              value: ERROR

  # Redis logs
  - job_name: redis
    static_configs:
      - targets:
          - localhost
        labels:
          job: redis
          __path__: /var/log/redis/*.log
    
    pipeline_stages:
      - regex:
          expression: '^(?P<pid>\d+):(?P<role>\w) (?P<timestamp>\d{2} \w+ \d{2}:\d{2}:\d{2}\.\d{3}) (?P<level>\*|#|-) (?P<message>.*)'
      - labels:
          role:
          level:
      - timestamp:
          format: "02 Jan 15:04:05.000"
          source: timestamp