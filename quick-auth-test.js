#!/usr/bin/env node

// Quick test ƒë·ªÉ check t·∫•t c·∫£ auth endpoints
// Usage: node quick-auth-test.js

const https = require('https');

const CURRENT_URL = 'https://prismy-production-l05nx0orj-nclamvn-gmailcoms-projects.vercel.app';

async function makeRequest(url, options = {}) {
  return new Promise((resolve, reject) => {
    const req = https.request(url, {
      method: options.method || 'GET',
      headers: options.headers || {}
    }, (res) => {
      let data = '';
      res.on('data', chunk => data += chunk);
      res.on('end', () => {
        resolve({
          statusCode: res.statusCode,
          headers: res.headers,
          body: data.substring(0, 500), // First 500 chars
          ok: res.statusCode >= 200 && res.statusCode < 300
        });
      });
    });
    
    req.on('error', reject);
    req.end();
  });
}

async function quickAuthTest() {
  console.log('üß™ QUICK AUTH ENDPOINTS TEST');
  console.log('============================\n');
  console.log('Testing URL:', CURRENT_URL);
  console.log('');

  const tests = [
    { name: 'Health Check', url: '/api/health' },
    { name: 'Auth Debug', url: '/api/auth/debug' },
    { name: 'Login Page', url: '/login' },
    { name: 'App Page (should redirect)', url: '/app' },
    { name: 'Callback Test', url: '/auth/callback?error=test' },
  ];

  for (const test of tests) {
    try {
      console.log(`üìä Testing: ${test.name}`);
      console.log(`   URL: ${test.url}`);
      
      const result = await makeRequest(CURRENT_URL + test.url);
      console.log(`   Status: ${result.statusCode}`);
      
      if (result.headers.location) {
        console.log(`   Redirects to: ${result.headers.location}`);
      }
      
      if (result.statusCode >= 400) {
        console.log(`   Error body: ${result.body.substring(0, 200)}...`);
      }
      
      console.log('');
    } catch (error) {
      console.log(`   ‚ùå Error: ${error.message}\n`);
    }
  }

  console.log('üîç MANUAL TESTING REQUIRED');
  console.log('=========================');
  console.log('');
  console.log('B√¢y gi·ªù h√£y test manually trong browser:');
  console.log('');
  console.log('1. M·ªü: ' + CURRENT_URL + '/login');
  console.log('2. M·ªü Developer Tools (F12)');
  console.log('3. V√†o tab Network');
  console.log('4. Click "Continue with Google"');
  console.log('5. Ho√†n th√†nh OAuth flow');
  console.log('6. Xem Network tab ƒë·ªÉ t√¨m l·ªói');
  console.log('');
  console.log('üö® TH√îNG TIN C·∫¶N REPORT:');
  console.log('- Callback request URL v√† status code');
  console.log('- Any error parameters trong URL');
  console.log('- Console errors (tab Console)');
  console.log('- Final page sau OAuth (login hay app)');
  console.log('');
  console.log('üìû V·ªõi th√¥ng tin n√†y, t√¥i s·∫Ω fix ƒë∆∞·ª£c v·∫•n ƒë·ªÅ!');
}

quickAuthTest().catch(console.error);