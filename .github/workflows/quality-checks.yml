name: Quality Checks - A11y & i18n

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run quality checks daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  quality-automation:
    name: Accessibility & i18n Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Create reports directory
        run: mkdir -p reports
        
      - name: Run accessibility checks
        run: npm run quality:a11y
        continue-on-error: true
        
      - name: Run i18n validation
        run: npm run quality:i18n
        continue-on-error: true
        
      - name: Run comprehensive quality check
        run: npm run quality:auto:ci
        id: quality-check
        
      - name: Upload quality report
        uses: actions/upload-artifact@v4
        with:
          name: quality-report-${{ github.sha }}
          path: reports/ci-quality.json
          retention-days: 30
          
      - name: Comment PR with quality results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            try {
              const reportPath = 'reports/ci-quality.json';
              if (fs.existsSync(reportPath)) {
                const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));
                
                const summary = `
            ## üîç Quality Check Results
            
            ### ‚ôø Accessibility
            - **Score:** ${report.summary.accessibility.score}%
            - **Issues:** ${report.summary.accessibility.issues}
            - **Critical:** ${report.summary.accessibility.criticalIssues}
            
            ### üåç Internationalization
            ${Object.entries(report.summary.i18n.coverage).map(([locale, coverage]) => 
              `- **${locale.toUpperCase()}:** ${coverage.toFixed(1)}% coverage`
            ).join('\n')}
            - **Total Issues:** ${report.summary.i18n.totalIssues}
            - **Missing Translations:** ${report.summary.i18n.missingTranslations}
            
            ### üìã Recommendations
            ${report.recommendations.map(rec => `- ${rec}`).join('\n')}
            
            ---
            *Quality report generated at ${new Date(report.timestamp).toLocaleString()}*
                `;
                
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: summary
                });
              }
            } catch (error) {
              console.error('Failed to post quality results:', error);
            }
            
      - name: Set quality gate status
        run: |
          if [ -f reports/ci-quality.json ]; then
            CRITICAL_ISSUES=$(node -e "
              const report = require('./reports/ci-quality.json');
              console.log(report.summary.accessibility.criticalIssues);
            ")
            
            if [ "$CRITICAL_ISSUES" -gt "0" ]; then
              echo "‚ùå Quality gate failed: $CRITICAL_ISSUES critical accessibility issues found"
              exit 1
            else
              echo "‚úÖ Quality gate passed"
            fi
          else
            echo "‚ö†Ô∏è No quality report generated"
            exit 1
          fi

  lighthouse-audit:
    name: Lighthouse Accessibility Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        env:
          SKIP_ENV_VALIDATION: true
          
      - name: Start application
        run: npm start &
        env:
          PORT: 3000
          
      - name: Wait for application
        run: npx wait-on http://localhost:3000 --timeout 60000
        
      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli
          lhci autorun --config=.lighthouserc.json
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          
      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report-${{ github.sha }}
          path: .lighthouseci/
          retention-days: 30

  axe-accessibility:
    name: axe Accessibility Testing
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        env:
          SKIP_ENV_VALIDATION: true
          
      - name: Start application
        run: npm start &
        env:
          PORT: 3000
          
      - name: Wait for application
        run: npx wait-on http://localhost:3000 --timeout 60000
        
      - name: Run axe accessibility tests
        run: |
          npx @axe-core/cli http://localhost:3000 \
            --include="main,nav,footer" \
            --exclude="#__next script" \
            --tags="wcag2a,wcag2aa" \
            --reporter=json \
            --output-dir=reports \
            --output-file=axe-results.json
            
      - name: Upload axe results
        uses: actions/upload-artifact@v4
        with:
          name: axe-report-${{ github.sha }}
          path: reports/axe-results.json
          retention-days: 30

  translation-coverage:
    name: Translation Coverage Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check translation files exist
        run: |
          LOCALES=("en" "vi" "ja" "ar" "zh")
          MISSING_LOCALES=""
          
          for locale in "${LOCALES[@]}"; do
            if [ ! -d "public/locales/$locale" ]; then
              MISSING_LOCALES="$MISSING_LOCALES $locale"
            fi
          done
          
          if [ ! -z "$MISSING_LOCALES" ]; then
            echo "‚ùå Missing translation directories:$MISSING_LOCALES"
            exit 1
          else
            echo "‚úÖ All translation directories exist"
          fi
          
      - name: Validate translation structure
        run: |
          # Check that all locales have the same structure
          if [ -d "public/locales" ]; then
            echo "üìÅ Translation directory structure:"
            find public/locales -name "*.json" | sort
            
            # Validate JSON files
            find public/locales -name "*.json" -exec node -e "
              try {
                JSON.parse(require('fs').readFileSync('{}', 'utf8'));
                console.log('‚úÖ Valid: {}');
              } catch (e) {
                console.error('‚ùå Invalid JSON: {}', e.message);
                process.exit(1);
              }
            " \;
          else
            echo "‚ö†Ô∏è No translations directory found"
          fi
          
      - name: Run i18n validation
        run: npm run quality:i18n